name: CI/CD Workflow

on:
  push:
    branches: [ main ]

jobs:
  # build:
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - uses: actions/checkout@v2
    
  #   - name: Build the docker_compose
  #     run: docker-compose up -d --build
      
  #   - name: Buid the application
  #     run: docker-compose exec -T counter_app npm run build

  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'

    - name: Install Composer dependencies
      run: composer install

    - name: Run PHPUnit tests
      run: vendor/bin/phpunit

  # jobs:
  # laravel-tests:

  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
  #     with:
  #       php-version: '8.0'
  #   - uses: actions/checkout@v3
  #   - name: Copy .env
  #     run: php -r "file_exists('.env') || copy('.env.example', '.env');"
  #   - name: Install Dependencies
  #     run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
  #   - name: Generate key
  #     run: php artisan key:generate
  #   - name: Directory Permissions
  #     run: chmod -R 777 storage bootstrap/cache
  #   - name: Create Database
  #     run: |
  #       mkdir -p database
  #       touch database/database.sqlite
  #   - name: Execute tests (Unit and Feature tests) via PHPUnit
  #     env:
  #       DB_CONNECTION: sqlite
  #       DB_DATABASE: database/database.sqlite
  #     run: vendor/bin/phpunit

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        env:
            RSA_PRIVATE_KEY: ${{ secrets.RSA_PRIVATE_KEY  }}
            EC2_SSH_USERNAME : ${{ secrets.EC2_SSH_USERNAME  }}
            EC2_SSH_PUBLIC_IP_ADDRESS : ${{ secrets.EC2_SSH_PUBLIC_IP_ADDRESS  }}
        run: |
          echo "$RSA_PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${EC2_SSH_USERNAME}@${EC2_SSH_PUBLIC_IP_ADDRESS} '
            echo && \

            echo "**Command: navigating to directory cd /var/www/html --------------------" &&
            cd /var/www/html && echo -e "\n" &&

            echo "**Command: checkout main -----------------------------------------------" &&
            sudo git checkout main && echo -e "\n" &&

            echo "**Command: git fetch ---------------------------------------------------" &&
            sudo git fetch --all && echo -e "\n" &&

            echo "**Command: git reset ---------------------------------------------------" &&
            sudo git reset --hard origin/main && echo -e "\n" &&
            
            echo "**Command: git pull ----------------------------------------------------" &&
            sudo git pull origin main && echo -e "\n" &&
            
            echo "**Command: npm install --omit=dev --------------------------------------" &&
            sudo npm install --omit=dev && echo -e "\n" &&
            
            echo "**Command: composer install -o --no-dev --------------------------------" &&
            sudo composer install -o --no-dev
          '